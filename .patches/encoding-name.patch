The vCard 2.1 standard uses "BASE64" as encoding
whereas 3.0 uses "B" or "b" instead. An extra blank
line is needed for 2.1, but not for 3.0.

This patch fixes the problem that for 2.1 a
  \r\n<space>\r\n
is added after a BASE64 property and adapts the
vcardconverter test program to switch between
the two encoding names.

See ObjectWeb tracker #305042.




#
# Patch managed by http://www.holgerschurig.de/patcher.html
#

--- native/src/c++/common/examples/vcardconverter.cpp~encoding-name
+++ native/src/c++/common/examples/vcardconverter.cpp
@@ -103,6 +103,23 @@
         vobj->setVersion(versions[index]);
         VProperty *vprop = vobj->getProperty(TEXT("VERSION"));
         vprop->setValue(versions[index]);
+
+        for (int property = vobj->propertiesCount() - 1;
+             property >= 0;
+             property--) {
+            VProperty *vprop = vobj->getProperty(property);
+
+            // replace 3.0 ENCODING=B with 2.1 ENCODING=BASE64 and vice versa
+            char *encoding = vprop->getParameterValue("ENCODING");
+            if (encoding &&
+                (!wcsicmp(TEXT("B"), encoding) || !wcsicmp(TEXT("BASE64"), encoding))) {
+                vprop->removeParameter("ENCODING");
+                vprop->addParameter("ENCODING",
+                                    !wcscmp(versions[index], TEXT("2.1")) ?
+                                    "BASE64" : "b");
+            }
+        }
+        
         vobj->fromNativeEncoding();
         wvcard = vobj->toString();
         vobj->toNativeEncoding();
--- native/src/c++/common/vocl/VObject.cpp~encoding-name
+++ native/src/c++/common/vocl/VObject.cpp
@@ -163,24 +163,24 @@
 
                 wchar_t* output = new wchar_t[size + 1];
                 wcscpy(output, TEXT("\0"));
-                wcscat(output, delim);
 
                 while (index<sizeOfValue)
                 {  
-                    wcsncat(output,property->getValue()+index,fold);
                     wcscat(output,delim);
+                    wcsncat(output,property->getValue()+index,fold);
                     index+=fold;
                 }
                 
                 wcscat(strVObject,output);
+                // the extra empty line is needed because the Bachus-Naur specification
+                // of vCard 2.1 says so
+                wcscat(strVObject, eof);
                 delete [] output;
             } 
             else
                 wcscat(strVObject,property->getValue());
         }
         wcscat(strVObject,eof);
-        //if(property->equalsEncoding(TEXT("BASE64")) && !wcscmp(version,TEXT("2.1"))) 
-        //    wcscat(strVObject, eof);
     }		
     return strVObject;
 }
