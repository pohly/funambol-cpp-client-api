This patch replaces several older patches and reimplements
their functionality using a new sync client API provided
by the SyncClient class:

http://wiki.objectweb.org/sync4j/Wiki.jsp?page=CClientDevelopmentHOWTO

Various changes:
- replaces one getSyncMode() with getPreferredSyncMode() because at
  that time getSyncMode() normally wouldn't be set yet
- if an error has been set already in SyncManager::beginSync(), do
  not overwrite it with a follow-up error
- added missing const qualifiers whenever necessary

(Curl)TransportAgent:
- did not set userAgent member in constructor,
  causing an uninitialized memory read in the
  CurlTransportAgent constructor
- CurlTransportAgent needs to be notified of
  userAgent modifications, therefore made all
  calls in TransportAgent virtual and added
  CurlTransportAgent::setUserAgent

Client API:
- SyncClient replaces Sync4jClient: API is backwards
  compatible, code using Sync4jClient compiles without
  changes
- SyncClient is expected to be subclassed by client
  to override certain functions which will be called
  by the base SyncClient:sync() and createDevInf() methods

SyncManager:
- fix for uninitialized memory (and potential crashes)
  when constructing a SyncManager and immediately
  deleting it again

Support for DevInf:
- constructed by SyncClient, passed to SyncManager
- fixed spelling of tag names
- instead of implementing the copying of devInfHash into a new
  SyncSource property, the code was refactored so that a SyncSource
  now has a SyncSourceConfig

Support for DevInf was tested with the Synthesis and Funambol
servers. A client does not have to implement any calls, default
implementations of the calls fill provide reasonable defaults for
required properties or leave them empty.

DevInf is actively sent as part of a Put if they have changed since
the last time, the new "syncml/devInfHash" property stores a hash of
the DevInf string to detect that. Sending DevInf as part of Results in
reply to a Get is also supported.
